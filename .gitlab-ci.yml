image: ghcr.io/prefix-dev/pixi:0.40.1

variables:
  OPENBLAS_NUM_THREADS : 1
  OMP_NUM_THREADS : 1
  MKL_DYNAMIC : FALSE
  MKL_NUM_THREADS : 1

before_script:
  - pixi global install git

run tests:
  parallel:
    matrix:
      - PIXI_ENV:
        - "mid"
        - "latest"
  script:
    - pixi run -e $PIXI_ENV tests
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .pixi

run coverage:
  extends: run tests
  parallel: null
  variables:
    PIXI_ENV: "minimal"
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    paths:
      - htmlcov
    reports:
      junit: junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml


run profiler:
  script:
    - pixi run profiler
  artifacts:
    paths:
      - timeProfile.html
      - memoryProfile.bin


run docs:
  script:
    - pixi run docs-build
  artifacts:
    paths:
      - docs/build
  cache:
    key: "$CI_JOB_NAME"
    paths:
        - .pixi

pages:
  needs:
    - run tests
    - run profiler
    - run docs
  script:
    - mkdir public
    - cp -r htmlcov public/
    - cp -r docs/build public/
    - cp -r timeProfile.html public/
  artifacts:
    paths:
      - public

run pre-commit:
  variables:
    PRE_COMMIT_HOME: $CI_PROJECT_DIR/.pre-commit-cache
  script:
    - pixi run -e precommit git config --global --add safe.directory $CI_PROJECT_DIR
    - pixi run pre-commit run --all-files
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .pre-commit-cache
      - .pixi


prepare zips:
  image: gitlab.kwant-project.org:5005/qt/research-docker
  before_script: []
  when: manual
  script:
    - zip -r zenodo.zip *
  artifacts:
    paths:
      - zenodo.zip

publish to test pypi:
  needs:
    - run tests
    - run coverage
    - run docs
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+.*\+test$/' # vX.Y.Z.post1+test
  script:
    - pixi run build
    - pixi run publish -a $PYPI_TEST_TOKEN -r test
  cache:
    key: "$CI_JOB_NAME"
    paths:
        - .pixi



publish to pypi:
  needs:
    - run tests
    - run docs
    - run coverage
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+[^+]*$/' # No +test
  script:
    - pixi run build
    - pixi run publish -a $PYPI_TOKEN
  cache:
    key: "$CI_JOB_NAME"
    paths:
        - .pixi
